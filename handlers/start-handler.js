import { Markup } from 'telegraf';
import { CONFIG, globalMonitoringActive, authError, addUser, getUserCount } from '../config/index.js';
import { getKeyboardForUser, isAdmin } from '../utils/helpers.js';

export const startHandler = (bot) => {
  bot.start(async (ctx) => {
    const userId = ctx.from.id;
    const userName = ctx.from.first_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
    
    addUser(userId);
    
    let statusMessage = '';
    if (authError) {
      statusMessage = 'üîê *–ò–∑–≤–∏–Ω–∏—Ç–µ, –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Ü–µ–Ω–æ–∫ –ø–æ–∫–∞ –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω.*\n–û–±–Ω–æ–≤–∏—Ç–µ —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.';
    } else if (globalMonitoringActive) {
      statusMessage = '‚úÖ *–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Ü–µ–Ω–æ–∫ –∞–∫—Ç–∏–≤–µ–Ω!*\n–ë–æ—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–æ–≤—ã–µ –æ—Ü–µ–Ω–∫–∏ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç.\n–í—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –æ—Ü–µ–Ω–∫–∞—Ö.';
    } else {
      statusMessage = '‚è∏ *–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Ü–µ–Ω–æ–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.*\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä—É—á–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –æ—Ü–µ–Ω–æ–∫.';
    }
    
    const keyboardButtons = getKeyboardForUser(userId, globalMonitoringActive);
    const totalUsers = getUserCount();
    
    await ctx.reply(
      `üëã –ü—Ä–∏–≤–µ—Ç, ${userName}!\n\n` +
      `üéì *–ë–æ—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ—Ü–µ–Ω–æ–∫ –¥–µ—Ç–µ–π*\n\n${statusMessage}\n\n` +
      `*–î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:*\n` +
      `‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ü–µ–Ω–∫–∏ –≤—Ä—É—á–Ω—É—é\n` +
      `‚Ä¢ –ü–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –æ—Ü–µ–Ω–∫–∞—Ö\n\n` +
      `*–î–µ—Ç–∏:*\n` +
      `üëß –í–∞—Ä—è | üë¶ –í–∞–Ω—è | üë∂ –ë–æ—Ä—è\n\n` +
      `üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${totalUsers}`,
      {
        parse_mode: 'Markdown',
        ...Markup.keyboard(keyboardButtons).resize()
      }
    );
  });

  bot.command('myid', async (ctx) => {
    const userId = ctx.from.id;
    
    await ctx.reply(
      `üÜî –í–∞—à ID: ${userId}\n` +
      `üëë ID –∞–¥–º–∏–Ω–∞: ${CONFIG.adminId}\n` +
      `üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${getUserCount()}\n\n` +
      `–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ—Ç ID –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π ADMIN_ID`
    );
  });

  bot.command('stats', async (ctx) => {
    if (!isAdmin(ctx.from.id)) {
      await ctx.reply('‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.');
      return;
    }
    
    await ctx.reply(
      `üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:*\n\n` +
      `üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${getUserCount()}\n` +
      `üîç –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: ${globalMonitoringActive ? '–∞–∫—Ç–∏–≤–µ–Ω ‚úÖ' : '–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω ‚è∏'}\n` +
      `üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è: ${authError ? '–æ—à–∏–±–∫–∞ ‚ùå' : '–≤ –Ω–æ—Ä–º–µ ‚úÖ'}\n` +
      `üëë –ê–¥–º–∏–Ω: ${CONFIG.adminId}`,
      { parse_mode: 'Markdown' }
    );
  });

  bot.command('unsubscribe', async (ctx) => {
    const userId = ctx.from.id;
    const { removeUser, getUserCount } = await import('../config/index.js');
    
    removeUser(userId);
    
    await ctx.reply(
      `üîï –í—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –Ω–æ–≤—ã—Ö –æ—Ü–µ–Ω–∫–∞—Ö.\n\n` +
      `–ß—Ç–æ–±—ã —Å–Ω–æ–≤–∞ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start\n\n` +
      `üë• –û—Å—Ç–∞–ª–æ—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${getUserCount()}`,
      Markup.removeKeyboard()
    );
  });
};
