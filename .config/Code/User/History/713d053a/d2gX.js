import { Markup } from 'telegraf';
import { CONFIG, globalMonitoringActive, setMonitoringState } from '../config/index.js';
import { getKeyboardForUser, isAdmin } from '../utils/helpers.js';
import { checkForNewGrades, initializeMonitoring } from '../services/monitoring-service.js';

export const adminHandler = (bot) => {
  // –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)
  bot.hears('üéØ –ó–∞–ø—É—Å—Ç–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥', async (ctx) => {
    const userId = ctx.from.id;
    
    if (!isAdmin(userId)) {
      await ctx.reply('‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–º.');
      return;
    }
    
    if (globalMonitoringActive) {
      await ctx.reply('‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —É–∂–µ –∞–∫—Ç–∏–≤–µ–Ω!');
      return;
    }
    
    setMonitoringState(true);
    
    await ctx.reply(
      'üéØ –ó–∞–ø—É—Å–∫–∞—é –≥–ª–æ–±–∞–ª—å–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Ü–µ–Ω–æ–∫!\n' +
      '‚è∞ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç\n' +
      'üìÖ –°–ª–µ–∂—É –∑–∞ –æ—Ü–µ–Ω–∫–∞–º–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 –¥–Ω—è\n\n' +
      '‚è≥ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...',
      Markup.keyboard(getKeyboardForUser(userId, true)).resize()
    );
    
    setTimeout(async () => {
      try {
        const initializedCount = await initializeMonitoring(bot);
        
        await ctx.reply(
          ‚úÖ –ì–ª–æ–±–∞–ª—å–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∞–∫—Ç–∏–≤–µ–Ω!\n +
          üìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${initializedCount} –æ—Ü–µ–Ω–æ–∫ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è\n +
          üîç –¢–µ–ø–µ—Ä—å –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ù–û–í–´–• –æ—Ü–µ–Ω–∫–∞—Ö
        );
        
        checkForNewGrades(bot);
        
      } catch (error) {
        await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.');
      }
    }, 2000);
  });

  // –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)
  bot.hears('üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥', async (ctx) => {
    const userId = ctx.from.id;
    
    if (!isAdmin(userId)) {
      await ctx.reply('‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–º.');
      return;
    }
    
    setMonitoringState(false);
    
    await ctx.reply(
      'üõë –ì–ª–æ–±–∞–ª—å–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Ü–µ–Ω–æ–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!\n' +
      '–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–µ—Ä–µ—Å—Ç–∞–Ω—É—Ç –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –æ—Ü–µ–Ω–∫–∞—Ö.',
      Markup.keyboard(getKeyboardForUser(userId, false)).resize()
    );
  });

  // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)
  bot.command('stop', async (ctx) => {
    if (!isAdmin(ctx.from.id)) {
      await ctx.reply('‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.');
      return;
    }
    
    setMonitoringState(false);
    await ctx.reply('üõë –ì–ª–æ–±–∞–ª—å–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Ü–µ–Ω–æ–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!');
  });
};