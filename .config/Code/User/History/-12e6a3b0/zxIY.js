const axios = require('axios');

// –í–∞—à–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
const token = "eyJ0eXAiOiJKV1QiLCJhBGciOiJUzi1NiJ9.eyJhdWQiOiJDg1MWJiZC05YzjtLTQ4NTctYjI0OCOxNDBkNTYzMmFmODQiLCJleHAiOjE3NjAzODUzODEsimlhdc16MTc2MDM4NDkwMSwiZXNrjoiZGizyzJjZjUtMmUwZi00M2E2LThhMzMtY2RhNTgzOTFKOGi3liwiZXNhaWQiOii3NDk3NTYxODg1liwiZWikijoiMTAMzM3OTg4MyJ9.gZE8EOHemBnJjG7sv1p8ww52gQU-O_i_VjP7u9UId9s";
const ssoKey = "db3c2cf5-2e0f-43a6-8a33-cda58391d8b7";

// –ö—É–∫–∏ –∫–∞–∫ –æ–±—ä–µ–∫—Ç
const cookies = {
  '_ga': 'GA1.2.899629649.1760383314',
  '_gid': 'GA1.2.1649209595.1760383314', 
  '_ym_uid': '1760383318884942455',
  '_ym_d': '1760383318',
  '_ym_isad': '1',
  'sso-key': ssoKey,
  'X-JWT-Token': token
};

// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ–±—ä–µ–∫—Ç –∫—É–∫–∏ –≤ —Å—Ç—Ä–æ–∫—É
const cookieString = Object.entries(cookies)
  .map(([key, value]) => `${key}=${value}`)
  .join('; ');

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ axios
const api = axios.create({
  baseURL: 'https://dnevnik2.petersburgedu.ru',
  headers: {
    'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/141.0.0.0 Safari/537.36',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8',
    'Accept-Language': 'ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7',
    'Cookie': cookieString
  }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
async function testAuth() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é...');
    
    const response = await api.get('/estimate');
    
    console.log('‚úÖ –£–°–ü–ï–•! –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç');
    console.log('–°—Ç–∞—Ç—É—Å:', response.status);
    
    if (response.data && response.data.includes('app-root')) {
      console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–Ω–µ–≤–Ω–∏–∫–∞');
    } else {
      console.log('‚ö†Ô∏è –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç, –Ω–æ –≤–æ–∑–º–æ–∂–Ω–æ –Ω–µ —Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞');
    }
    
    return true;
    
  } catch (error) {
    console.log('‚ùå –û–®–ò–ë–ö–ê –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
    
    if (error.response) {
      console.log('–°—Ç–∞—Ç—É—Å –æ—à–∏–±–∫–∏:', error.response.status);
      
      if (error.response.status === 401) {
        console.log('üí° –¢–æ–∫–µ–Ω –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π –∏–ª–∏ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–π');
      } else if (error.response.status === 403) {
        console.log('üí° –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω');
      }
    } else {
      console.log('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏:', error.message);
    }
    
    return false;
  }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏
testAuth().then(success => {
  if (success) {
    console.log('\nüéâ –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –¥–µ–ª–∞—Ç—å API –∑–∞–ø—Ä–æ—Å—ã –∫ –¥–Ω–µ–≤–Ω–∏–∫—É');
  } else {
    console.log('\nüí° –ù—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
  }
});