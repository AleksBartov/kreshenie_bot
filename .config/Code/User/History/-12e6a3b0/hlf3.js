const axios = require('axios');

// –í–∞—à–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
const token = "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5ZDg1MWJiZC05YzljLTQ4NTctYjI0OC0xNDBkNTYzMmFmODQiLCJleHAiOjE3NjAzODgxNzEsImlhdCI6MTc2MDM4NzY5MSwiZXNrIjoiZGIzYzJjZjUtMmUwZi00M2E2LThhMzMtY2RhNTgzOTFkOGI3IiwiZXNhaWQiOiI3NDk3NTYxODg1IiwiZWlkIjoiMTA4NzM3OTg4MyJ9.IArB4TASqE5l8vrLWc2b5AihvH_771UPyh8sqLxAEv0";
const ssoKey = "db3c2cf5-2e0f-43a6-8a33-cda58391d8b7";

// –ö—É–∫–∏ –∫–∞–∫ –æ–±—ä–µ–∫—Ç
const cookies = {
  '_ga': 'GA1.2.899629649.1760383314',
  '_gid': 'GA1.2.1649209595.1760383314', 
  '_ym_uid': '1760383318884942455',
  '_ym_d': '1760383318',
  '_ym_isad': '1',
  'sso-key': ssoKey,
  'X-JWT-Token': token
};

// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ–±—ä–µ–∫—Ç –∫—É–∫–∏ –≤ —Å—Ç—Ä–æ–∫—É
const cookieString = Object.entries(cookies)
  .map(([key, value]) => `${key}=${value}`)
  .join('; ');

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ axios
const api = axios.create({
  baseURL: 'https://dnevnik2.petersburgedu.ru',
  headers: {
    'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/141.0.0.0 Safari/537.36',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8',
    'Accept-Language': 'ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7',
    'Cookie': cookieString
  }
});

// 1. –°–ê–ú–´–ô –ü–†–û–°–¢–û–ô –ó–ê–ü–†–û–° - —Ç–æ—á–Ω–∞—è –∫–æ–ø–∏—è –∏–∑ –±—Ä–∞—É–∑–µ—Ä–∞
async function exactBrowserRequest() {
  console.log('1. üéØ –¢–û–ß–ù–ê–Ø –ö–û–ü–ò–Ø –ó–ê–ü–†–û–°–ê –ò–ó –ë–†–ê–£–ó–ï–†–ê\n');
  
  try {
    // –¢–æ—Ç URL –∫–æ—Ç–æ—Ä—ã–π —Ç–æ—á–Ω–æ —Ä–∞–±–æ—Ç–∞–ª
    const exactUrl = 'https://dnevnik2.petersburgedu.ru/api/journal/estimate/table?p_educations%5B%5D=741052&p_date_from=01.09.2025&p_date_to=24.10.2025&p_limit=100&p_page=1';
    
    const response = await api.get(exactUrl);
    console.log('‚úÖ –£–°–ü–ï–•! –°—Ç–∞—Ç—É—Å:', response.status);
    
    if (response.data && response.data.data && response.data.data.items) {
      const items = response.data.data.items;
      console.log(`üìä –ü–æ–ª—É—á–µ–Ω–æ ${items.length} –æ—Ü–µ–Ω–æ–∫`);
      
      // –ü–æ–∫–∞–∂–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ—Ü–µ–Ω–æ–∫
      console.log('\nüìÖ –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –æ—Ü–µ–Ω–æ–∫:');
      items.slice(-5).forEach((item, index) => {
        console.log(`   ${item.date} - ${item.subject_name}: ${item.estimate_value_name} (${item.estimate_type_name})`);
      });
    }
    
    return true;
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞:', error.response?.status);
    return false;
  }
}

// 2. –ü–†–û–°–¢–û–ô –ó–ê–ü–†–û–° –° –ú–ò–ù–ò–ú–ê–õ–¨–ù–´–ú–ò –ü–ê–†–ê–ú–ï–¢–†–ê–ú–ò
async function simpleRequest() {
  console.log('\n2. üéØ –ü–†–û–°–¢–û–ô –ó–ê–ü–†–û–° –° –ú–ò–ù–ò–ú–£–ú–û–ú –ü–ê–†–ê–ú–ï–¢–†–û–í\n');
  
  try {
    const params = {
      'p_education[]': '741052',
      'p_date_from': '01.09.2025',
      'p_date_to': '24.10.2025'
      // –ë–µ–∑ limit –∏ page
    };

    const response = await api.get('/api/journal/estimate/table', { params });
    console.log('‚úÖ –£–°–ü–ï–•! –°—Ç–∞—Ç—É—Å:', response.status);
    
    if (response.data && response.data.data) {
      console.log('üìä –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã');
    }
    
    return true;
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞:', error.response?.status);
    return false;
  }
}

// 3. –ó–ê–ü–†–û–° –° –†–ê–ó–ù–´–ú–ò –§–û–†–ú–ê–¢–ê–ú–ò –ü–ê–†–ê–ú–ï–¢–†–û–í
async function differentParamFormats() {
  console.log('\n3. üéØ –¢–ï–°–¢–ò–†–£–ï–ú –†–ê–ó–ù–´–ï –§–û–†–ú–ê–¢–´ –ü–ê–†–ê–ú–ï–¢–†–û–í\n');
  
  const testCases = [
    {
      name: '–§–æ—Ä–º–∞—Ç –∫–∞–∫ –≤ –±—Ä–∞—É–∑–µ—Ä–µ',
      params: { 'p_education[]': '741052', 'p_date_from': '01.09.2025', 'p_date_to': '13.10.2025' }
    },
    {
      name: '–ë–µ–∑ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö —Å–∫–æ–±–æ–∫',
      params: { 'p_education': '741052', 'p_date_from': '01.09.2025', 'p_date_to': '13.10.2025' }
    },
    {
      name: '–¢–æ–ª—å–∫–æ education',
      params: { 'p_education[]': '741052' }
    },
    {
      name: '–¢–æ–ª—å–∫–æ –¥–∞—Ç—ã',
      params: { 'p_date_from': '01.09.2025', 'p_date_to': '13.10.2025' }
    }
  ];
  
  for (const testCase of testCases) {
    try {
      console.log(`üß™ –¢–µ—Å—Ç: ${testCase.name}...`);
      const response = await api.get('/api/journal/estimate/table', { 
        params: testCase.params 
      });
      
      console.log(`‚úÖ –£—Å–ø–µ—Ö! –°—Ç–∞—Ç—É—Å: ${response.status}`);
      
    } catch (error) {
      console.log(`‚ùå –û—à–∏–±–∫–∞: ${error.response?.status}`);
    }
  }
}

// 4. –ü–û–õ–£–ß–ï–ù–ò–ï –î–ê–ù–ù–´–• –ü–û –ß–ê–°–¢–Ø–ú
async function getDataStepByStep() {
  console.log('\n4. üéØ –ü–û–õ–£–ß–ê–ï–ú –î–ê–ù–ù–´–ï –ü–û–≠–¢–ê–ü–ù–û\n');
  
  // –≠—Ç–∞–ø 1: –ü–æ–ª—É—á–∞–µ–º –í–°–ï –¥–∞–Ω–Ω—ã–µ –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å
  try {
    const allDataParams = {
      'p_education[]': '741052',
      'p_date_from': '01.01.2025',
      'p_date_to': '31.12.2025',
      'p_limit': 500
    };

    console.log('üì• –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –æ—Ü–µ–Ω–∫–∏ –∑–∞ –≥–æ–¥...');
    const response = await api.get('/api/journal/estimate/table', { 
      params: allDataParams 
    });
    
    if (response.data && response.data.data && response.data.data.items) {
      const items = response.data.data.items;
      console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${items.length} –æ—Ü–µ–Ω–æ–∫ –∑–∞ –≥–æ–¥`);
      // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –º–µ—Å—è—Ü–∞–º
      const byMonth = {};
      items.forEach(item => {
        const month = item.date.split('.')[1]; // –ü–æ–ª—É—á–∞–µ–º –º–µ—Å—è—Ü
        if (!byMonth[month]) byMonth[month] = [];
        byMonth[month].push(item);
      });
      
      console.log('\nüìÖ –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –º–µ—Å—è—Ü–∞–º:');
      Object.keys(byMonth).sort().forEach(month => {
        console.log(`   –ú–µ—Å—è—Ü ${month}: ${byMonth[month].length} –æ—Ü–µ–Ω–æ–∫`);
      });
      
      // –ü–æ–∫–∞–∂–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –æ—Ü–µ–Ω–æ–∫
      console.log('\nüìö –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 –æ—Ü–µ–Ω–æ–∫:');
      items.slice(-10).forEach(item => {
        console.log(`   ${item.date} - ${item.subject_name}: ${item.estimate_value_name}`);
      });
    }
    
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –Ω–∞ —ç—Ç–∞–ø–µ 1:', error.response?.status);
  }
}

// 5. –ü–û–ò–°–ö –î–†–£–ì–ò–• API ENDPOINTS
async function findOtherEndpoints() {
  console.log('\n5. üéØ –ò–©–ï–ú –î–†–£–ì–ò–ï –ü–û–õ–ï–ó–ù–´–ï ENDPOINTS\n');
  
  const endpoints = [
    '/api/user/info',
    '/api/student/info',
    '/api/journal/info',
    '/api/schedule',
    '/api/progress'
  ];
  
  for (const endpoint of endpoints) {
    try {
      const response = await api.get(endpoint);
      console.log(`‚úÖ ${endpoint} - –°—Ç–∞—Ç—É—Å: ${response.status}`);
      
      if (response.data) {
        console.log('   –î–∞–Ω–Ω—ã–µ:', JSON.stringify(response.data).substring(0, 100));
      }
    } catch (error) {
      console.log(`‚ùå ${endpoint} - ${error.response?.status || '–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞'}`);
    }
  }
}

// –û–°–ù–û–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø
async function main() {
  console.log('üöÄ –ü–û–°–¢–ï–ü–ï–ù–ù–û–ï –ü–û–õ–£–ß–ï–ù–ò–ï –î–ê–ù–ù–´–• –ò–ó –î–ù–ï–í–ù–ò–ö–ê\n');
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ –ø–æ—Ä—è–¥–∫—É
  await exactBrowserRequest();
  await simpleRequest(); 
  await differentParamFormats();
  await getDataStepByStep();
  await findOtherEndpoints();
  
  console.log('\nüéâ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!');
  console.log('üí° –¢–µ–ø–µ—Ä—å –≤–∏–¥–Ω–æ –∫–∞–∫–∏–µ –∑–∞–ø—Ä–æ—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç, –∞ –∫–∞–∫–∏–µ –Ω–µ—Ç');
}

main();