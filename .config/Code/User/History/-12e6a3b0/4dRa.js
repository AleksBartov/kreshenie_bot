const axios = require('axios');

// –í–∞—à–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
const token = "eyJ0eXAiOiJKV1QiLCJhBGciOiJUzi1NiJ9.eyJhdWQiOiJDg1MWJiZC05YzjtLTQ4NTctYjI0OCOxNDBkNTYzMmFmODQiLCJleHAiOjE3NjAzODUzODEsimlhdc16MTc2MDM4NDkwMSwiZXNrjoiZGizyzJjZjUtMmUwZi00M2E2LThhMzMtY2RhNTgzOTFKOGi3liwiZXNhaWQiOii3NDk3NTYxODg1liwiZWikijoiMTAMzM3OTg4MyJ9.gZE8EOHemBnJjG7sv1p8ww52gQU-O_i_VjP7u9UId9s";
const ssoKey = "db3c2cf5-2e0f-43a6-8a33-cda58391d8b7";

// –ö—É–∫–∏ –∫–∞–∫ –æ–±—ä–µ–∫—Ç
const cookies = {
  '_ga': 'GA1.2.899629649.1760383314',
  '_gid': 'GA1.2.1649209595.1760383314', 
  '_ym_uid': '1760383318884942455',
  '_ym_d': '1760383318',
  '_ym_isad': '1',
  'sso-key': ssoKey,
  'X-JWT-Token': token
};

// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ–±—ä–µ–∫—Ç –∫—É–∫–∏ –≤ —Å—Ç—Ä–æ–∫—É
const cookieString = Object.entries(cookies)
  .map(([key, value]) => `${key}=${value}`)
  .join('; ');

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ axios
const api = axios.create({
  baseURL: 'https://dnevnik2.petersburgedu.ru',
  headers: {
    'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/141.0.0.0 Safari/537.36',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8',
    'Accept-Language': 'ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7',
    'Cookie': cookieString
  }
});


// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ü–µ–Ω–æ–∫
async function getGrades() {
  try {
    // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ URL
    const params = {
      'p_education[]': '741052', // ID –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è (—Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞/–∫–ª–∞—Å—Å–∞)
      'p_date_from': '01.09.2025', // –ù–∞—á–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞
      'p_date_to': '24.10.2025',   // –ö–æ–Ω–µ—á–Ω–∞—è –¥–∞—Ç–∞  
      'p_limit': 100,              // –õ–∏–º–∏—Ç –∑–∞–ø–∏—Å–µ–π
      'p_page': 1                  // –°—Ç—Ä–∞–Ω–∏—Ü–∞
    };

    console.log('üìä –ü–æ–ª—É—á–∞–µ–º –æ—Ü–µ–Ω–∫–∏...');
    
    const response = await api.get('/api/journal/estimate/table', { params });
    
    console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ! –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã');
    console.log('–°—Ç–∞—Ç—É—Å:', response.status);
    
    // –í—ã–≤–æ–¥–∏–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
    console.log('\nüìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö:');
    console.log('–ö–ª—é—á–∏ –≤ –æ—Ç–≤–µ—Ç–µ:', Object.keys(response.data));
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ - –ø–æ–∫–∞–∂–µ–º –∏—Ö
    if (response.data.data) {
      console.log('\nüéØ –û—Ü–µ–Ω–∫–∏:');
      console.log(JSON.stringify(response.data.data, null, 2));
    } else {
      console.log('\nüìÑ –ü–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:');
      console.log(JSON.stringify(response.data, null, 2));
    }
    
    return response.data;
    
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ü–µ–Ω–æ–∫:');
    if (error.response) {
      console.log('–°—Ç–∞—Ç—É—Å:', error.response.status);
      console.log('–î–∞–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏:', error.response.data);
    } else {
      console.log('–°–æ–æ–±—â–µ–Ω–∏–µ:', error.message);
    }
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏—Ö –æ—Ü–µ–Ω–æ–∫
async function getTodayGrades() {
  try {
    const today = new Date();
    const todayStr = today.toLocaleDateString('ru-RU'); // –§–æ—Ä–º–∞—Ç DD.MM.YYYY
    
    const params = {
      'p_education[]': '741052',
      'p_date_from': todayStr,
      'p_date_to': todayStr,  
      'p_limit': 50,
      'p_page': 1
    };

    console.log(`üìÖ –ü–æ–ª—É—á–∞–µ–º –æ—Ü–µ–Ω–∫–∏ –∑–∞ ${todayStr}...`);
    
    const response = await api.get('/api/journal/estimate/table', { params });
    
    console.log('‚úÖ –°–µ–≥–æ–¥–Ω—è—à–Ω–∏–µ –æ—Ü–µ–Ω–∫–∏ –ø–æ–ª—É—á–µ–Ω—ã');
    
    // –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –≤—ã–≤–æ–¥
    if (response.data.data && response.data.data.length > 0) {
      console.log('\nüìö –°–µ–≥–æ–¥–Ω—è—à–Ω–∏–µ –æ—Ü–µ–Ω–∫–∏:');
      response.data.data.forEach((item, index) => {
        console.log(`${index + 1}. ${item.subject}  '–ü—Ä–µ–¥–º–µ—Ç': ${item.grade}  '–Ω–µ—Ç –æ—Ü–µ–Ω–∫–∏'`);
      });
    } else {
      console.log('üìù –ù–∞ —Å–µ–≥–æ–¥–Ω—è –æ—Ü–µ–Ω–æ–∫ –Ω–µ—Ç');
    }
    
    return response.data;
    
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞:', error.response?.status || error.message);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ü–µ–Ω–æ–∫ –∑–∞ –ø–µ—Ä–∏–æ–¥
async function getGradesByPeriod(dateFrom, dateTo) {
  try {
    const params = {
      'p_education[]': '741052',
      'p_date_from': dateFrom,
      'p_date_to': dateTo,  
      'p_limit': 200,
      'p_page': 1
    };

    console.log(`üìÖ –û—Ü–µ–Ω–∫–∏ —Å ${dateFrom} –ø–æ ${dateTo}...`);
    
    const response = await api.get('/api/journal/estimate/table', { params });
    
    console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${response.data.data?.length || 0} –∑–∞–ø–∏—Å–µ–π`);
    
    return response.data;
    
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞:', error.response?.status || error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º
async function main() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ü–µ–Ω–æ–∫...\n');
  
  // 1. –ü–æ–ª—É—á–∏–º —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–µ –æ—Ü–µ–Ω–∫–∏
  await getTodayGrades();
  console.log('\n' + '='.repeat(50) + '\n');
  
  // 2. –ü–æ–ª—É—á–∏–º –æ—Ü–µ–Ω–∫–∏ –∑–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é
  const today = new Date();
  const weekAgo = new Date(today);
  weekAgo.setDate(today.getDate() - 7);
  
  const dateFrom = weekAgo.toLocaleDateString('ru-RU');
  const dateTo = today.toLocaleDateString('ru-RU');
  
  await getGradesByPeriod(dateFrom, dateTo);
}

// –ó–∞–ø—É—Å–∫
main();